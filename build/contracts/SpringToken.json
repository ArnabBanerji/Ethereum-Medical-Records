{
  "contractName": "SpringToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "INITIAL_SUPPLY",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b5060038054600160a060020a03191633600160a060020a031690811790915569021e19e0c9bab2400000600181905560008281526020818152604080832084905580519384525191927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a3610988806100936000396000f3006080604052600436106100cf5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100d4578063095ea7b31461015e57806318160ddd1461019657806323b872dd146101bd5780632ff2e9dc146101e7578063313ce567146101fc578063661884631461022757806370a082311461024b5780638da5cb5b1461026c57806395d89b411461029d578063a9059cbb146102b2578063d73dd623146102d6578063dd62ed3e146102fa578063f2fde38b14610321575b600080fd5b3480156100e057600080fd5b506100e9610344565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012357818101518382015260200161010b565b50505050905090810190601f1680156101505780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561016a57600080fd5b50610182600160a060020a036004351660243561037b565b604080519115158252519081900360200190f35b3480156101a257600080fd5b506101ab6103e5565b60408051918252519081900360200190f35b3480156101c957600080fd5b50610182600160a060020a03600435811690602435166044356103eb565b3480156101f357600080fd5b506101ab61056b565b34801561020857600080fd5b50610211610579565b6040805160ff9092168252519081900360200190f35b34801561023357600080fd5b50610182600160a060020a036004351660243561057e565b34801561025757600080fd5b506101ab600160a060020a0360043516610677565b34801561027857600080fd5b50610281610692565b60408051600160a060020a039092168252519081900360200190f35b3480156102a957600080fd5b506100e96106a1565b3480156102be57600080fd5b50610182600160a060020a03600435166024356106d8565b3480156102e257600080fd5b50610182600160a060020a03600435166024356107d1565b34801561030657600080fd5b506101ab600160a060020a0360043581169060243516610873565b34801561032d57600080fd5b50610342600160a060020a036004351661089e565b005b60408051808201909152600b81527f537072696e67546f6b656e000000000000000000000000000000000000000000602082015281565b600160a060020a03338116600081815260026020908152604080832094871680845294825280832086905580518681529051929493927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60015490565b6000600160a060020a038316151561040257600080fd5b600160a060020a03841660009081526020819052604090205482111561042757600080fd5b600160a060020a038085166000908152600260209081526040808320339094168352929052205482111561045a57600080fd5b600160a060020a038416600090815260208190526040902054610483908363ffffffff61093716565b600160a060020a0380861660009081526020819052604080822093909355908516815220546104b8908363ffffffff61094916565b600160a060020a03808516600090815260208181526040808320949094558783168252600281528382203390931682529190915220546104fe908363ffffffff61093716565b600160a060020a038086166000818152600260209081526040808320338616845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b69021e19e0c9bab240000081565b601281565b600160a060020a033381166000908152600260209081526040808320938616835292905290812054808311156105db57600160a060020a033381166000908152600260209081526040808320938816835292905290812055610612565b6105eb818463ffffffff61093716565b600160a060020a033381166000908152600260209081526040808320938916835292905220555b600160a060020a0333811660008181526002602090815260408083209489168084529482529182902054825190815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a35060019392505050565b600160a060020a031660009081526020819052604090205490565b600354600160a060020a031681565b60408051808201909152600381527f5350540000000000000000000000000000000000000000000000000000000000602082015281565b6000600160a060020a03831615156106ef57600080fd5b600160a060020a03331660009081526020819052604090205482111561071457600080fd5b600160a060020a03331660009081526020819052604090205461073d908363ffffffff61093716565b600160a060020a033381166000908152602081905260408082209390935590851681522054610772908363ffffffff61094916565b600160a060020a03808516600081815260208181526040918290209490945580518681529051919333909316927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350600192915050565b600160a060020a033381166000908152600260209081526040808320938616835292905290812054610809908363ffffffff61094916565b600160a060020a0333811660008181526002602090815260408083209489168084529482529182902085905581519485529051929391927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60035433600160a060020a039081169116146108b957600080fd5b600160a060020a03811615156108ce57600080fd5b600354604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008282111561094357fe5b50900390565b8181018281101561095657fe5b929150505600a165627a7a72305820f09e77a3379c5ad16f039020aee3cef32d35a1b607e7065dad83a7fb2997443e0029",
  "deployedBytecode": "0x6080604052600436106100cf5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100d4578063095ea7b31461015e57806318160ddd1461019657806323b872dd146101bd5780632ff2e9dc146101e7578063313ce567146101fc578063661884631461022757806370a082311461024b5780638da5cb5b1461026c57806395d89b411461029d578063a9059cbb146102b2578063d73dd623146102d6578063dd62ed3e146102fa578063f2fde38b14610321575b600080fd5b3480156100e057600080fd5b506100e9610344565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012357818101518382015260200161010b565b50505050905090810190601f1680156101505780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561016a57600080fd5b50610182600160a060020a036004351660243561037b565b604080519115158252519081900360200190f35b3480156101a257600080fd5b506101ab6103e5565b60408051918252519081900360200190f35b3480156101c957600080fd5b50610182600160a060020a03600435811690602435166044356103eb565b3480156101f357600080fd5b506101ab61056b565b34801561020857600080fd5b50610211610579565b6040805160ff9092168252519081900360200190f35b34801561023357600080fd5b50610182600160a060020a036004351660243561057e565b34801561025757600080fd5b506101ab600160a060020a0360043516610677565b34801561027857600080fd5b50610281610692565b60408051600160a060020a039092168252519081900360200190f35b3480156102a957600080fd5b506100e96106a1565b3480156102be57600080fd5b50610182600160a060020a03600435166024356106d8565b3480156102e257600080fd5b50610182600160a060020a03600435166024356107d1565b34801561030657600080fd5b506101ab600160a060020a0360043581169060243516610873565b34801561032d57600080fd5b50610342600160a060020a036004351661089e565b005b60408051808201909152600b81527f537072696e67546f6b656e000000000000000000000000000000000000000000602082015281565b600160a060020a03338116600081815260026020908152604080832094871680845294825280832086905580518681529051929493927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60015490565b6000600160a060020a038316151561040257600080fd5b600160a060020a03841660009081526020819052604090205482111561042757600080fd5b600160a060020a038085166000908152600260209081526040808320339094168352929052205482111561045a57600080fd5b600160a060020a038416600090815260208190526040902054610483908363ffffffff61093716565b600160a060020a0380861660009081526020819052604080822093909355908516815220546104b8908363ffffffff61094916565b600160a060020a03808516600090815260208181526040808320949094558783168252600281528382203390931682529190915220546104fe908363ffffffff61093716565b600160a060020a038086166000818152600260209081526040808320338616845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b69021e19e0c9bab240000081565b601281565b600160a060020a033381166000908152600260209081526040808320938616835292905290812054808311156105db57600160a060020a033381166000908152600260209081526040808320938816835292905290812055610612565b6105eb818463ffffffff61093716565b600160a060020a033381166000908152600260209081526040808320938916835292905220555b600160a060020a0333811660008181526002602090815260408083209489168084529482529182902054825190815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a35060019392505050565b600160a060020a031660009081526020819052604090205490565b600354600160a060020a031681565b60408051808201909152600381527f5350540000000000000000000000000000000000000000000000000000000000602082015281565b6000600160a060020a03831615156106ef57600080fd5b600160a060020a03331660009081526020819052604090205482111561071457600080fd5b600160a060020a03331660009081526020819052604090205461073d908363ffffffff61093716565b600160a060020a033381166000908152602081905260408082209390935590851681522054610772908363ffffffff61094916565b600160a060020a03808516600081815260208181526040918290209490945580518681529051919333909316927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350600192915050565b600160a060020a033381166000908152600260209081526040808320938616835292905290812054610809908363ffffffff61094916565b600160a060020a0333811660008181526002602090815260408083209489168084529482529182902085905581519485529051929391927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60035433600160a060020a039081169116146108b957600080fd5b600160a060020a03811615156108ce57600080fd5b600354604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008282111561094357fe5b50900390565b8181018281101561095657fe5b929150505600a165627a7a72305820f09e77a3379c5ad16f039020aee3cef32d35a1b607e7065dad83a7fb2997443e0029",
  "sourceMap": "299:626:7:-;;;753:170;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;513:5:4;:18;;-1:-1:-1;;;;;;513:18:4;521:10;-1:-1:-1;;;;;513:18:4;;;;;;;627:33:7;-1:-1:-1;784:29:7;;;-1:-1:-1;823:20:7;;;;;;;;;;;:37;;;875:41;;;;;;-1:-1:-1;;875:41:7;;;;;;;;;;;299:626;;;;;;",
  "deployedSourceMap": "299:626:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;353:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;353:43:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;353:43:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1875:202:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1875:202:8;-1:-1:-1;;;;;1875:202:8;;;;;;;;;;;;;;;;;;;;;;;;;374:89:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;374:89:0;;;;;;;;;;;;;;;;;;;;752:478:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;752:478:8;-1:-1:-1;;;;;752:478:8;;;;;;;;;;;;586:74:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;586:74:7;;;;511:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;511:35:7;;;;;;;;;;;;;;;;;;;;;;;3781:441:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3781:441:8;-1:-1:-1;;;;;3781:441:8;;;;;;;1190:105:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1190:105:0;-1:-1:-1;;;;;1190:105:0;;;;;239:20:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;239:20:4;;;;;;;;-1:-1:-1;;;;;239:20:4;;;;;;;;;;;;;;435:37:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;435:37:7;;;;629:347:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;629:347:0;-1:-1:-1;;;;;629:347:0;;;;;;;3021:276:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3021:276:8;-1:-1:-1;;;;;3021:276:8;;;;;;;2410:132;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2410:132:8;-1:-1:-1;;;;;2410:132:8;;;;;;;;;;874:188:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;874:188:4;-1:-1:-1;;;;;874:188:4;;;;;;;353:43:7;;;;;;;;;;;;;;;;;;;:::o;1875:202:8:-;-1:-1:-1;;;;;1966:10:8;1958:19;;1942:4;1958:19;;;-1:-1:-1;1958:19:8;;;;;;;;:29;;;;;;;;;;;;:38;;;2011;;;;;;;1942:4;;1958:29;:19;2011:38;;;;;;;;;;;-1:-1:-1;2066:4:8;1875:202;;;;:::o;374:89:0:-;444:12;;374:89;:::o;752:478:8:-;834:4;-1:-1:-1;;;;;858:17:8;;;;850:26;;;;;;-1:-1:-1;;;;;904:15:8;;:8;:15;;;;;;;;;;;894:25;;;886:34;;;;;;-1:-1:-1;;;;;948:14:8;;;;;;;-1:-1:-1;948:14:8;;;;;;;;963:10;948:26;;;;;;;;;;938:36;;;930:45;;;;;;-1:-1:-1;;;;;1004:15:8;;:8;:15;;;;;;;;;;;:27;;1024:6;1004:19;:27::i;:::-;-1:-1:-1;;;;;986:15:8;;;:8;:15;;;;;;;;;;;:45;;;;1057:13;;;;;;;:25;;1075:6;1057:17;:25::i;:::-;-1:-1:-1;;;;;1041:13:8;;;:8;:13;;;;;;;;;;;:41;;;;1121:14;;;;;-1:-1:-1;1121:14:8;;;;;1136:10;1121:26;;;;;;;;;;;:38;;1152:6;1121:30;:38::i;:::-;-1:-1:-1;;;;;1092:14:8;;;;;;;-1:-1:-1;1092:14:8;;;;;;;;1107:10;1092:26;;;;;;;;;;:67;;;;1174:28;;;;;;;;;;;1092:14;;1174:28;;;;;;;;;;;-1:-1:-1;1219:4:8;752:478;;;;;:::o;586:74:7:-;627:33;586:74;:::o;511:35::-;544:2;511:35;:::o;3781:441:8:-;-1:-1:-1;;;;;3904:10:8;3896:19;;3864:4;3896:19;;;-1:-1:-1;3896:19:8;;;;;;;;:29;;;;;;;;;;;;3939:27;;;3935:184;;;-1:-1:-1;;;;;3990:10:8;3982:19;;4014:1;3982:19;;;-1:-1:-1;3982:19:8;;;;;;;;:29;;;;;;;;;;;:33;3935:184;;;4078:30;:8;4091:16;4078:30;:12;:30;:::i;:::-;-1:-1:-1;;;;;4054:10:8;4046:19;;;;;;-1:-1:-1;4046:19:8;;;;;;;;:29;;;;;;;;;:62;3935:184;-1:-1:-1;;;;;4142:10:8;4133:61;;4164:19;;;;-1:-1:-1;4164:19:8;;;;;;;;4133:61;;;4164:29;;;;;;;;;;;4133:61;;;;;;;;;;;;;;;;;-1:-1:-1;4211:4:8;;3781:441;-1:-1:-1;;;3781:441:8:o;1190:105:0:-;-1:-1:-1;;;;;1272:16:0;1246:7;1272:16;;;;;;;;;;;;1190:105::o;239:20:4:-;;;-1:-1:-1;;;;;239:20:4;;:::o;435:37:7:-;;;;;;;;;;;;;;;;;;;:::o;629:347:0:-;692:4;-1:-1:-1;;;;;716:17:0;;;;708:26;;;;;;-1:-1:-1;;;;;771:10:0;762:20;:8;:20;;;;;;;;;;;752:30;;;744:39;;;;;;-1:-1:-1;;;;;826:10:0;817:20;:8;:20;;;;;;;;;;;:32;;842:6;817:24;:32::i;:::-;-1:-1:-1;;;;;803:10:0;794:20;;:8;:20;;;;;;;;;;;:55;;;;875:13;;;;;;;:25;;893:6;875:17;:25::i;:::-;-1:-1:-1;;;;;859:13:0;;;:8;:13;;;;;;;;;;;;:41;;;;915:33;;;;;;;859:13;;924:10;915:33;;;;;;;;;;;;;-1:-1:-1;965:4:0;629:347;;;;:::o;3021:276:8:-;-1:-1:-1;;;;;3155:10:8;3147:19;;3099:4;3147:19;;;-1:-1:-1;3147:19:8;;;;;;;;:29;;;;;;;;;;;;:46;;3181:11;3147:33;:46::i;:::-;-1:-1:-1;;;;;3123:10:8;3115:19;;;;;;-1:-1:-1;3115:19:8;;;;;;;;:29;;;;;;;;;;;;;:78;;;3208:61;;;;;;;3115:29;;:19;;3208:61;;;;;;;;;;-1:-1:-1;3286:4:8;3021:276;;;;:::o;2410:132::-;-1:-1:-1;;;;;2510:15:8;;;2484:7;2510:15;;;-1:-1:-1;2510:15:8;;;;;;;;:25;;;;;;;;;;;;;2410:132::o;874:188:4:-;679:5;;665:10;-1:-1:-1;;;;;665:19:4;;;679:5;;665:19;657:28;;;;;;-1:-1:-1;;;;;954:22:4;;;;946:31;;;;;;1013:5;;992:37;;-1:-1:-1;;;;;992:37:4;;;;1013:5;;992:37;;1013:5;;992:37;1039:5;:16;;-1:-1:-1;;1039:16:4;-1:-1:-1;;;;;1039:16:4;;;;;;;;;;874:188::o;906:120:6:-;964:7;990:6;;;;983:14;;;;-1:-1:-1;1014:5:6;;;906:120::o;1096:137::-;1179:5;;;1201:6;;;;1194:14;;;;1096:137;;;;:::o",
  "source": "pragma solidity ^0.4.21;\n\nimport \"./StandardToken.sol\";\nimport \"./Ownable.sol\";\n\n/**\n * @title SpringToken\n * @dev ERC20 Token, where all tokens are pre-assigned to the creator.\n * Note they can later distribute these tokens as they wish using `transfer` and other\n * `StandardToken` functions.\n */\ncontract SpringToken is StandardToken, Ownable {\n\n    string public constant name = \"SpringToken\"; // solium-disable-line uppercase\n    string public constant symbol = \"SPT\"; // solium-disable-line uppercase\n    uint8 public constant decimals = 18; // solium-disable-line uppercase\n\n    uint256 public constant INITIAL_SUPPLY = 10000 * (10 ** uint256(decimals));\n\n    /**\n     * @dev Constructor that gives msg.sender all of existing tokens.\n     */\n    constructor() public {\n        totalSupply_ = INITIAL_SUPPLY;\n        balances[msg.sender] = INITIAL_SUPPLY;\n        emit Transfer(0x0, msg.sender, INITIAL_SUPPLY);\n    }\n}\n",
  "sourcePath": "/home/nico/Desktop/public_repos/hospital_network/contracts/SpringToken.sol",
  "ast": {
    "absolutePath": "/home/nico/Desktop/public_repos/hospital_network/contracts/SpringToken.sol",
    "exportedSymbols": {
      "SpringToken": [
        1421
      ]
    },
    "id": 1422,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1373,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:7"
      },
      {
        "absolutePath": "/home/nico/Desktop/public_repos/hospital_network/contracts/StandardToken.sol",
        "file": "./StandardToken.sol",
        "id": 1374,
        "nodeType": "ImportDirective",
        "scope": 1422,
        "sourceUnit": 1668,
        "src": "26:29:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/nico/Desktop/public_repos/hospital_network/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 1375,
        "nodeType": "ImportDirective",
        "scope": 1422,
        "sourceUnit": 328,
        "src": "56:23:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1376,
              "name": "StandardToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1667,
              "src": "323:13:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardToken_$1667",
                "typeString": "contract StandardToken"
              }
            },
            "id": 1377,
            "nodeType": "InheritanceSpecifier",
            "src": "323:13:7"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1378,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 327,
              "src": "338:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$327",
                "typeString": "contract Ownable"
              }
            },
            "id": 1379,
            "nodeType": "InheritanceSpecifier",
            "src": "338:7:7"
          }
        ],
        "contractDependencies": [
          95,
          138,
          170,
          327,
          1667
        ],
        "contractKind": "contract",
        "documentation": "@title SpringToken\n@dev ERC20 Token, where all tokens are pre-assigned to the creator.\nNote they can later distribute these tokens as they wish using `transfer` and other\n`StandardToken` functions.",
        "fullyImplemented": true,
        "id": 1421,
        "linearizedBaseContracts": [
          1421,
          327,
          1667,
          95,
          138,
          170
        ],
        "name": "SpringToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1382,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 1421,
            "src": "353:43:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1380,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "353:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "537072696e67546f6b656e",
              "id": 1381,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "383:13:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_128f9563270664e07a7cd5115748324ad75ca5c4a4697f91a2dfcfa0e699dfe1",
                "typeString": "literal_string \"SpringToken\""
              },
              "value": "SpringToken"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1385,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 1421,
            "src": "435:37:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1383,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "435:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "535054",
              "id": 1384,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "467:5:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_2f05a0ffc0c491cdeacb458a2f79632dce5a8d01cb1da4810845afdbd2865821",
                "typeString": "literal_string \"SPT\""
              },
              "value": "SPT"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1388,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 1421,
            "src": "511:35:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1386,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "511:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 1387,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "544:2:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1398,
            "name": "INITIAL_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 1421,
            "src": "586:74:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1389,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "586:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 1397,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3130303030",
                "id": 1390,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "627:5:7",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10000_by_1",
                  "typeString": "int_const 10000"
                },
                "value": "10000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "components": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 1391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "636:2:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1393,
                          "name": "decimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1388,
                          "src": "650:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 1392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "642:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 1394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "642:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "636:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1396,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "635:25:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "627:33:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1419,
              "nodeType": "Block",
              "src": "774:149:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1401,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "784:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1402,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1398,
                      "src": "799:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "784:29:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1404,
                  "nodeType": "ExpressionStatement",
                  "src": "784:29:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1405,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "823:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1408,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1406,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1741,
                          "src": "832:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "832:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "823:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1409,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1398,
                      "src": "846:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "823:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1411,
                  "nodeType": "ExpressionStatement",
                  "src": "823:37:7"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "307830",
                        "id": 1413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "884:3:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0x0"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1414,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1741,
                          "src": "889:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "889:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1416,
                        "name": "INITIAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1398,
                        "src": "901:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1412,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 169,
                      "src": "875:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "875:41:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1418,
                  "nodeType": "EmitStatement",
                  "src": "870:46:7"
                }
              ]
            },
            "documentation": "@dev Constructor that gives msg.sender all of existing tokens.",
            "id": 1420,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "764:2:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 1400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "774:0:7"
            },
            "scope": 1421,
            "src": "753:170:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1422,
        "src": "299:626:7"
      }
    ],
    "src": "0:926:7"
  },
  "legacyAST": {
    "absolutePath": "/home/nico/Desktop/public_repos/hospital_network/contracts/SpringToken.sol",
    "exportedSymbols": {
      "SpringToken": [
        1421
      ]
    },
    "id": 1422,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1373,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:7"
      },
      {
        "absolutePath": "/home/nico/Desktop/public_repos/hospital_network/contracts/StandardToken.sol",
        "file": "./StandardToken.sol",
        "id": 1374,
        "nodeType": "ImportDirective",
        "scope": 1422,
        "sourceUnit": 1668,
        "src": "26:29:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/nico/Desktop/public_repos/hospital_network/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 1375,
        "nodeType": "ImportDirective",
        "scope": 1422,
        "sourceUnit": 328,
        "src": "56:23:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1376,
              "name": "StandardToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1667,
              "src": "323:13:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardToken_$1667",
                "typeString": "contract StandardToken"
              }
            },
            "id": 1377,
            "nodeType": "InheritanceSpecifier",
            "src": "323:13:7"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1378,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 327,
              "src": "338:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$327",
                "typeString": "contract Ownable"
              }
            },
            "id": 1379,
            "nodeType": "InheritanceSpecifier",
            "src": "338:7:7"
          }
        ],
        "contractDependencies": [
          95,
          138,
          170,
          327,
          1667
        ],
        "contractKind": "contract",
        "documentation": "@title SpringToken\n@dev ERC20 Token, where all tokens are pre-assigned to the creator.\nNote they can later distribute these tokens as they wish using `transfer` and other\n`StandardToken` functions.",
        "fullyImplemented": true,
        "id": 1421,
        "linearizedBaseContracts": [
          1421,
          327,
          1667,
          95,
          138,
          170
        ],
        "name": "SpringToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1382,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 1421,
            "src": "353:43:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1380,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "353:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "537072696e67546f6b656e",
              "id": 1381,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "383:13:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_128f9563270664e07a7cd5115748324ad75ca5c4a4697f91a2dfcfa0e699dfe1",
                "typeString": "literal_string \"SpringToken\""
              },
              "value": "SpringToken"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1385,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 1421,
            "src": "435:37:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1383,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "435:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "535054",
              "id": 1384,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "467:5:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_2f05a0ffc0c491cdeacb458a2f79632dce5a8d01cb1da4810845afdbd2865821",
                "typeString": "literal_string \"SPT\""
              },
              "value": "SPT"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1388,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 1421,
            "src": "511:35:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1386,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "511:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 1387,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "544:2:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1398,
            "name": "INITIAL_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 1421,
            "src": "586:74:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1389,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "586:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 1397,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3130303030",
                "id": 1390,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "627:5:7",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10000_by_1",
                  "typeString": "int_const 10000"
                },
                "value": "10000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "components": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 1391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "636:2:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1393,
                          "name": "decimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1388,
                          "src": "650:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 1392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "642:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 1394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "642:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "636:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1396,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "635:25:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "627:33:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1419,
              "nodeType": "Block",
              "src": "774:149:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1401,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "784:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1402,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1398,
                      "src": "799:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "784:29:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1404,
                  "nodeType": "ExpressionStatement",
                  "src": "784:29:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1405,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "823:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1408,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1406,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1741,
                          "src": "832:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "832:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "823:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1409,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1398,
                      "src": "846:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "823:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1411,
                  "nodeType": "ExpressionStatement",
                  "src": "823:37:7"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "307830",
                        "id": 1413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "884:3:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0x0"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1414,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1741,
                          "src": "889:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "889:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1416,
                        "name": "INITIAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1398,
                        "src": "901:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1412,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 169,
                      "src": "875:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "875:41:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1418,
                  "nodeType": "EmitStatement",
                  "src": "870:46:7"
                }
              ]
            },
            "documentation": "@dev Constructor that gives msg.sender all of existing tokens.",
            "id": 1420,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "764:2:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 1400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "774:0:7"
            },
            "scope": 1421,
            "src": "753:170:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1422,
        "src": "299:626:7"
      }
    ],
    "src": "0:926:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-05-04T16:23:52.244Z"
}